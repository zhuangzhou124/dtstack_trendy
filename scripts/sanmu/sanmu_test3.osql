select tm.channel_endpoint_code,
			 productAmount,
			 top10_produc_amount_rate,
			 product_sub_coupon_amount,
			 top10_produc_sub_coupon_amount_rate,
			 retail_amount,
			 retail_amount_rate,
			 retail_sub_coupon_amount,
			 retail_sub_coupon_amount_rate,
			 towItemQuantity,
			 towItemQuantityRate,
			 orderMaxAmount,
			 orderQuantity
from
(select
 channel_endpoint_code,
 sum(case when rank_num <=10 then salesAmount else 0 end) as productAmount,
 sum(case when rank_num <=10 then salesAmount else 0 end)/sum(salesAmount) as top10_produc_amount_rate,
 sum(case when sub_coupon_rank <=10 then sale_amt_sub_coupon else 0 end) as product_sub_coupon_amount,
 sum(case when sub_coupon_rank <=10 then sale_amt_sub_coupon else 0 end)/sum(sale_amt_sub_coupon) as top10_produc_sub_coupon_amount_rate,
 sum(retailAmount) as retail_amount,
 sum(retailAmount)/sum(salesAmount) as retail_amount_rate,
 sum(retailSubCouponAmount) as retail_sub_coupon_amount,
 sum(retailSubCouponAmount)/sum(salesAmount) as retail_sub_coupon_amount_rate
 from(
	 select 		so.channel_endpoint_code, 
							 ois.spu_code,
							 rank() over(order by sum(soi.price_sales* soi.qty_product ) desc) rank_num,
					 rank() over(order by sum(soi.price_sales* soi.qty_product -p.amt_cash_coupon_contribution) desc) sub_coupon_rank,
					 sum(soi.price_sales* soi.qty_product ) as salesAmount,
					 sum(soi.price_sales* soi.qty_product -p.amt_cash_coupon_contribution) as sale_amt_sub_coupon, --销售金额(券后)
					 sum(case when soi.discount_rate>0.88 then soi.price_sales* soi.qty_product else 0 end) as retailAmount,
					 sum(case when soi.discount_rate>0.88 then soi.price_sales* soi.qty_product -p.amt_cash_coupon_contribution else 0 end) as retailSubCouponAmount --销售金额(券后)
	 from ods_sales_order so
		 inner join ods_sales_order_item soi
			 on soi.sales_order_no = so.sales_order_no
		 inner join ods_sales_order_item_price p
			 on soi.sales_order_item_no=p.sales_order_item_no
		 left join ods_api_item_sku ois
			 on soi.sku_code=ois.sku_code
	 where so.ds='20191121'
	 and soi.ds='20191121'
	 and p.ds='20191121'
	 and ois.ds='20191121'
	 and (so.paid_time between '2019-08-16 00:00:00'  and '2019-08-16 23:59:59')
	 and so.org_code='TRE'
	 and so.channel_endpoint_code='3246'
	 and so.order_status='1'
	 group by ois.spu_code,so.channel_endpoint_code
 ) tspu
 group by channel_endpoint_code
) tm
	left join(
		select  channel_endpoint_code,
						max(salesAmount) as orderMaxAmount,
						sum(order_flag) as orderQuantity,
						sum(case when salesQuantity>=2 then order_flag else 0 end) as towItemQuantity,
						sum(case when salesQuantity>=2 then order_flag else 0 end)/ sum(order_flag) as towItemQuantityRate
from(
	select
	so.channel_endpoint_code,
	so.sales_order_no,
	(case when (so.order_type = '101' or (so.order_type = '104' and so.amt_total > 0)) then 1
				when so.order_type in ('102','103') then -1 end) order_flag,--标记退货
	sum(case when soi.price_sales<>0 then soi.qty_product else 0 end) as salesQuantity,
	sum(soi.price_sales* soi.qty_product ) as salesAmount
	from ods_sales_order so
		inner join ods_sales_order_item soi
			on soi.sales_order_no = so.sales_order_no
	where 1=1
	and so.ds='20191121'
	and soi.ds='20191121'
	and (so.paid_time between '2019-08-16 00:00:00'  and '2019-08-16 23:59:59')
	and so.org_code='TRE'
	and so.channel_endpoint_code='3246'
	and so.order_status='1'
	group by so.channel_endpoint_code,
	so.sales_order_no,
	(case when (so.order_type = '101' or (so.order_type = '104' and so.amt_total > 0)) then 1
				when so.order_type in ('102','103') then -1 end)
) torder
group by channel_endpoint_code
) tw on tm.channel_endpoint_code=tw.channel_endpoint_code;






select * from
(SELECT org_code,
			 channel_endpoint_code,
			 date_type,
			 date_id,
			 sum(CASE
			 WHEN qty_product >= 2 THEN order_flag
			 ELSE 0
			 END) AS towItemQuantity,
			 case when sum(order_flag) <> 0 AND sum(order_flag) is not null then (sum(CASE
			 WHEN qty_product >= 2 THEN order_flag ELSE 0 END) / sum(order_flag))
						else null end AS towItemQuantityRate,
			 max(max_amount) AS max_amount,
			 max(max_amount_sub_coupon) AS max_amount_sub_coupon
FROM (
	SELECT
	a.org_code,
	tmp2.date_type,
	tmp2.date_id,
	a.channel_endpoint_code,
	a.sales_order_no,
	(case when (a.order_type = '101' or (a.order_type = '104' and a.amt_total > 0)) then 1
				when a.order_type in ('102','103') then -1 end) order_flag,--标记退货
	sum(case when b.price_sales<>0 then b.qty_product else 0 end) AS qty_product, --计算每单下的商品件数,
	sum(b.price_sales * b.qty_product) AS max_amount,--最大单金额(未扣券),
	sum(coalesce(b.price_sales * b.qty_product, 0) - coalesce(c.amt_cash_coupon_contribution, 0)) AS
	max_amount_sub_coupon  --最大单金额（扣券）
	FROM ${td_ods}.ods_sales_order a
		INNER JOIN (
			SELECT date_type,
						 date_id,
						 time_id
			FROM td_ads_dev.dim_time
			WHERE ds <= '${bizdate}'
			GROUP BY date_type, date_id, time_id
		) tmp2
			ON to_char(CAST(a.paid_time AS DATETIME), 'yyyymmdd') = tmp2.time_id
		INNER JOIN ${td_ods}.ods_sales_order_item b
			ON a.sales_order_no = b.sales_order_no AND b.ds = '${bizdate}'
		INNER JOIN ${td_ods}.ods_sales_order_item_price c
			ON b.sales_order_item_no = c.sales_order_item_no AND c.ds = '${bizdate}'
	WHERE a.ds = '${bizdate}' AND order_status = 1 AND b.price_sales <> 0
	GROUP BY a.org_code
	, a.channel_endpoint_code
	, tmp2.date_type
	, tmp2.date_id
	, a.sales_order_no
	,(case when (a.order_type = '101' or (a.order_type = '104' and a.amt_total > 0)) then 1
	when a.order_type in ('102','103') then -1 end)
) t
GROUP BY org_code, channel_endpoint_code, date_type, date_id
) as t1 where t1.channel_endpoint_code = '3246' and date_id = '20190816'

