--name:ads_api_tpos_tdrp_wfx_brand_channel_endpoint_1d
--author:sanmu
--create time:2019-10-09 13:53
--drop table ads_api_tpos_tdrp_wfx_brand_channel_endpoint_1d
--***********************************
-- 表   名：ads_api_tpos_tdrp_wfx_brand_channel_endpoint_1d
-- 功能描述：日期+品牌+门店粒度汇总表
-- 生命周期：30天
-- 调度周期：周期调度
-- 创建者：  三木
-- 创建日期：20191008
-- 修改日志：
--***********************************


CREATE TABLE IF NOT EXISTS ads_api_tpos_tdrp_wfx_brand_channel_endpoint_1d(
	biz_date                                                    STRING COMMENT '统计日期',
	gmt_sale                                                    STRING COMMENT '销售日期',
	org_code                                                    STRING COMMENT '品牌code',
	channel_endpoint                                            STRING COMMENT '门店code',
	endpoint_name                                               STRING COMMENT '终端名称',
	customer_num_1d_brand_channel_endpoint                      BIGINT COMMENT '客流统计         ',
	sales_num_1d_brand_channel_endpoint                         BIGINT COMMENT '销售件数   ',
	sales_amt_1d_brand_channel_endpoint                         DOUBLE COMMENT '销售金额   ',
	return_num_1d_brand_channel_endpoint                        BIGINT COMMENT '退货件数         ',
	return_amt_1d_brand_channel_endpoint                        DOUBLE COMMENT '退货金额         ',
	net_sales_num_1d_brand_channel_endpoint                     BIGINT COMMENT '净销售量         ',
	net_sales_amt_1d_brand_store_coupon                         DOUBLE COMMENT '净销售额（含现金券）   ',
	net_sales_amt_1d_brand_store_without_coupon                 DOUBLE COMMENT '净销售额（不含现金券）  ',
	cash_coupon_amt_1d_brand_channel_endpoint                   DOUBLE COMMENT '现金券金额          ',
	retail_price_amt_1d_brand_channel_endpoint                  DOUBLE COMMENT '吊牌金额         ',
	deal_num_1d_brand_channel_endpoint                          BIGINT COMMENT '成交笔数（不减去退货笔数）',
	rma_num_1d_brand_channel_endpoint                           BIGINT COMMENT '退换笔数         ',
	sales_num_1d_brand_sotre_vip                                BIGINT COMMENT 'vip销售件数      ',
	sales_amt_1d_brand_store_vip                                DOUBLE COMMENT 'vip销售金额      ',
	deal_rate_1d_brand_channel_endpoint                         DOUBLE COMMENT '成交率(成交笔数 /客流统计)          ',
	avg_discount_1d_brand_channel_endpoint                      DOUBLE COMMENT '平均折扣(销售金额/吊牌金额)         ',
	sales_per_1d_brand_channel_endpoint                         DOUBLE COMMENT '客单价:实际销售金额（销售金额）/销售单数 (成交笔数)        ',
	joint_rate_1d_brand_channel_endpoint                        DOUBLE COMMENT '连带率:销售件数/销售单数(成交笔数)         ',
	sales_ratio_1d_brand_store_vip                              DOUBLE COMMENT 'vip销售占比：vip销售金额/销售金额      ',
	date_type                                                   STRING COMMENT '日期类型',
	date_id                                                     STRING COMMENT '日期'

)COMMENT '日期+品牌+门店粒度汇总表' PARTITIONED BY(
	ds STRING COMMENT '时间分区')
LIFECYCLE 30;


INSERT OVERWRITE TABLE ads_api_tpos_tdrp_wfx_brand_channel_endpoint_1d PARTITION(ds = '${bizdate}')
	SELECT '${bizdate}' AS biz_date,
				 t1.order_time AS gmt_sale,
				 t1.org_code,
				 t1.channel_endpoint_code AS store_code,
				 t5.endpoint_name AS endpoint_name,
				 t10.customer_num_1d_brand_store,
				 t1.sales_num_1d_brand_channel_endpoint,
				 t1.sales_amt_1d_brand_channel_endpoint,
				 t1.return_num_1d_brand_channel_endpoint,
				 t1.return_amt_1d_brand_channel_endpoint,
				 t1.net_sales_num_1d_brand_channel_endpoint,
				 t1.net_sales_amt_1d_brand_store_coupon,
				 t1.net_sales_amt_1d_brand_store_without_coupon,
				 t1.cash_coupon_amt_1d_brand_channel_endpoint,
				 t1.retail_price_amt_1d_brand_channel_endpoint,
				 t1.deal_num_1d_brand_channel_endpoint,
				 t1.rma_num_1d_brand_channel_endpoint,
				 t1.sales_num_1d_brand_store_vip,
				 t1.sales_amt_1d_brand_store_vip,
				 CASE
				 WHEN t10.customer_num_1d_brand_store IS NULL OR t10.customer_num_1d_brand_store = 0 THEN 0.0
				 ELSE (t1.deal_num_1d_brand_channel_endpoint / t10.customer_num_1d_brand_store)
				 END AS deal_rate_1d_brand_channel_endpoint,
				 CASE
				 WHEN t1.retail_price_amt_1d_brand_channel_endpoint IS NULL OR t1.retail_price_amt_1d_brand_channel_endpoint = 0
				 OR t1.sales_amt_1d_brand_channel_endpoint <= 0 THEN 0.0
				 ELSE (t1.sales_amt_1d_brand_channel_endpoint / t1.retail_price_amt_1d_brand_channel_endpoint)
				 END AS avg_discount_1d_brand_channel_endpoint,
				 CASE
				 WHEN t1.deal_num_1d_brand_channel_endpoint IS NULL OR t1.deal_num_1d_brand_channel_endpoint = 0 THEN 0.0
				 ELSE (t1.sales_amt_1d_brand_channel_endpoint / t1.deal_num_1d_brand_channel_endpoint)
				 END AS sales_per_1d_brand_channel_endpoint,
				 CASE
				 WHEN t1.deal_num_1d_brand_channel_endpoint IS NULL OR t1.deal_num_1d_brand_channel_endpoint = 0 THEN 0.0
				 ELSE (t1.sales_num_1d_brand_channel_endpoint / t1.deal_num_1d_brand_channel_endpoint)
				 END AS joint_rate_1d_brand_channel_endpoint,
				 CASE
				 WHEN t1.sales_amt_1d_brand_channel_endpoint IS NULL OR t1.sales_amt_1d_brand_channel_endpoint = 0 OR t1.
				 sales_amt_1d_brand_store_vip <= 0 THEN 0.0
				 ELSE (t1.sales_amt_1d_brand_store_vip / t1.sales_amt_1d_brand_channel_endpoint)
				 END AS sales_ratio_1d_brand_store_vip,
				 'day' AS date_type,
				 t1.order_time AS date_id
	FROM (

		SELECT so.org_code,
					 so.channel_endpoint_code,
					 sum(CASE
					 WHEN soi.price_sales <> 0 THEN soi.qty_product
					 ELSE 0
					 END) AS sales_num_1d_brand_channel_endpoint, --销售件数
					 sum(soi.price_sales * soi.qty_product) AS sales_amt_1d_brand_channel_endpoint, --销售金额
					 sum(CASE
					 WHEN so.order_type = 103 THEN soi.qty_product
					 ELSE 0
					 END) AS return_num_1d_brand_channel_endpoint, --退货件数
					 sum(CASE
					 WHEN so.order_type = 103 THEN soi.qty_product * soi.price_sales - soip.amt_cash_coupon_contribution
					 ELSE 0
					 END) AS return_amt_1d_brand_channel_endpoint, --退货金额
					 sum(case when (soi.price_sales*soi.qty_product)>0 then soi.qty_product else 0 end ) AS net_sales_num_1d_brand_channel_endpoint, --净销售量
					 sum(case when (soi.price_sales*soi.qty_product)>0 then soi.price_sales* soi.qty_product else 0 end) AS net_sales_amt_1d_brand_store_coupon, --净销售额（含现金券）
					 sum(soi.price_sales * soi.qty_product - soip.amt_cash_coupon_contribution) AS
					 net_sales_amt_1d_brand_store_without_coupon,  --净销售额（不含现金券
					 sum(soip.amt_cash_coupon_contribution) AS cash_coupon_amt_1d_brand_channel_endpoint,  --现金券金额
					 sum(soi.price_retail * soi.qty_product) AS retail_price_amt_1d_brand_channel_endpoint, --吊牌金额
					 coalesce(COUNT ( DISTINCT CASE WHEN so.order_type = '101' OR(so.order_type = '104' AND so.amt_total > 0)
					 THEN so.sales_order_no END), 0) -
					 coalesce( COUNT ( DISTINCT CASE WHEN so.order_type IN('102', '103')THEN so.sales_order_no END), 0) AS deal_num_1d_brand_channel_endpoint,    --成交笔数（)
					 COUNT(DISTINCT CASE
					 WHEN so.order_type IN ('103', '104') THEN so.sales_order_no
					 END) AS rma_num_1d_brand_channel_endpoint, --退换笔数
					 sum(CASE
					 WHEN mgi.is_vip = 1 AND soi.price_sales <> 0 THEN soi.qty_product
					 ELSE 0
					 END) AS sales_num_1d_brand_store_vip,--VIP销售件数
					 sum(CASE
					 WHEN mgi.is_vip = 1 THEN soi.price_sales * soi.qty_product
					 ELSE 0
					 END) AS sales_amt_1d_brand_store_vip, --vip销售金额（未扣券）
					 substr(regexp_replace(so.paid_time, '-', '', 0), 1, 8) AS order_time
		FROM ods_sales_order so
			INNER JOIN ods_sales_order_item soi
				ON soi.sales_order_no = so.sales_order_no AND soi.ds = '${bizdate}'
			INNER JOIN ods_sales_order_item_price soip
				ON soi.sales_order_item_no = soip.sales_order_item_no AND soip.ds = '${bizdate}'
			LEFT OUTER JOIN ods_member_grade_info mgi
				ON so.member_grade_code = mgi.grade_code AND mgi.ds = '${bizdate}'
		WHERE so.order_status = 1 AND so.ds = '${bizdate}'
		GROUP BY so.org_code,
		so.channel_endpoint_code,
		substr(regexp_replace(so.paid_time, '-', '', 0), 1, 8)) AS t1
		LEFT OUTER JOIN (

		-------客流统计
			SELECT
						 store_code,
						 substr(regexp_replace(create_time, '-', '', 0), 1, 8) AS order_time,
						 sum(in_count) AS customer_num_1d_brand_store
			FROM ods_store_passenger_flow
			WHERE ds = '${bizdate}'
			GROUP BY store_code, substr(regexp_replace(create_time, '-', '', 0), 1, 8)) AS t10
			ON t1.channel_endpoint_code = t10.store_code AND t1.order_time = t10.order_time
		LEFT OUTER JOIN (

		-------endpoint_name
			SELECT org_code,
						 channel_endpoint_code,
						 endpoint_name
			FROM ods_api_channel_endpoint
			WHERE ds = '${bizdate}') AS t5
			ON t1.channel_endpoint_code = t5.channel_endpoint_code AND t1.org_code = t5.org_code;


INSERT OVERWRITE TABLE ads_api_tpos_tdrp_wfx_brand_channel_endpoint_1d PARTITION(ds)
	SELECT *
	FROM ads_api_tpos_tdrp_wfx_brand_channel_endpoint_1d
	WHERE ds = '${bizdate}' AND org_code IS NOT NULL AND channel_endpoint IS NOT NULL AND date_id IS NOT NULL;



















