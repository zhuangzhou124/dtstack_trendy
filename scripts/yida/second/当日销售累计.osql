--name:日销售排行
--author:zhangjunda
--create time:2019-10-13 23:26




CREATE TABLE IF NOT EXISTS ads_api_tpos_tdrp_wfx_clerk_15mm_2(
  date_id               STRING COMMENT '营业日期',
  org_code              STRING COMMENT '品牌编码',
  channel_endpoint_code STRING COMMENT '门店编码,不能为空',
  clerkstatus           STRING COMMENT '店员状态',
  clerk_no              STRING COMMENT '店员编码',
  clerk_name            STRING COMMENT '店员名称',
  target_no             STRING COMMENT '销售目标编号,取',
  target_month          STRING COMMENT '目标月份,yyyy-mm',
  role_code             STRING COMMENT '角色编码',
  target_amt            DOUBLE COMMENT '目标金额',
  real_sales_amt        DOUBLE COMMENT '实际销售额',
  biz_date              BIGINT COMMENT '统计日期'
)COMMENT '当日销售累计' PARTITIONED BY(
  ds STRING);




INSERT OVERWRITE TABLE ads_api_tpos_tdrp_wfx_clerk_15mm_2 PARTITION(ds = '${bizdate}')
  SELECT time_id AS date_id
  ,      t1.org_code
  ,      coalesce(t1.channel_endpoint_code, '-110')
  ,      t2.STATUS AS STATUS
  ,      coalesce(t1.clerk_no, '-110')
  ,      t2.clerk_name AS cleck_name
  ,      store_monthly_sales_analyze_no
  ,      target_time
  ,      t2.role_code AS role_code
  ,      target_amount
  ,      realSales
  ,      CAST('${bizdate}' AS BIGINT)
  FROM (
    SELECT coalesce(a.shopping_guider_no, b.clerk_no) AS clerk_no
    ,      a.channel_endpoint_code
    ,      a.org_code
    ,      time_id
    ,      coalesce(b.store_monthly_sales_analyze_no) AS store_monthly_sales_analyze_no
    ,      coalesce(b.target_time) AS target_time
    ,      coalesce(b.target_amount, 0) AS target_amount
    ,      coalesce(a.realSales, 0) AS realSales
    FROM (
      SELECT ds1 AS time_id
      ,      so.org_code
      ,      so.channel_endpoint_code
      ,      so.shopping_guider_no
      ,      coalesce(sum(so.amt_total), 0) - coalesce(sum(sop.amt_coupon_paid), 0) AS realSales
      FROM (
        SELECT *
        FROM ods_sales_order a1
          JOIN (
            SELECT ds1, date_type, date_id, time_id
            FROM td_ads_dev.dim_time
            WHERE ds >= '20150101' AND ds <= '${bizdate}' AND date_type = 'month'
          ) time ON to_char(to_date(paid_time, 'yyyy-mm-dd hh:mi:ss'), 'yyyymmdd') = time.time_id
        WHERE ds = '${bizdate}' AND order_status = 1  AND shopping_guider_no IS NOT NULL
      ) so
        INNER JOIN (
          SELECT *
          FROM ods_sales_order_price
          WHERE ds = '${bizdate}'
        ) sop ON sop.sales_order_no = so.sales_order_no

      GROUP BY ds1,so.org_code, so.channel_endpoint_code
      , so.shopping_guider_no
    ) a
      LEFT OUTER JOIN (
        SELECT store_monthly_sales_analyze_no
        ,      store_code
        ,      concat(YEAR, '-', MONTH) AS target_time
        ,      clerk_no
        ,      target_amount
        FROM ods_clerk_monthly_sales_analyze
        WHERE ds = '${bizdate}' AND clerk_no IS NOT NULL
      ) b ON a.shopping_guider_no = b.clerk_no AND a.channel_endpoint_code = b.store_code AND
      REPLACE(target_time, '-', '') = substr(time_id, 1, 6)
  ) t1
    LEFT OUTER JOIN (
      SELECT *
      FROM (
        SELECT *, row_number()OVER (PARTITION BY clerk_no, channel_endpoint_code ORDER BY last_update_time DESC) AS rank
        FROM ods_clerk_info
        WHERE ds = '${bizdate}' --and  status=7
      ) a
      WHERE rank = 1
    ) t2 ON t1.clerk_no = t2.clerk_no AND t1.channel_endpoint_code = t2.channel_endpoint_code;



